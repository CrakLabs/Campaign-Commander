<?xml version="1.0" encoding="UTF-8"?>

<definitions 
    xmlns:ns1="http://connection.exception.api.commons.emailvision.com/" 
    xmlns:ns2="http://exceptions.service.apibatchmember.emailvision.com/" 
    xmlns:ns3="http://schemas.xmlsoap.org/soap/http" 
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" 
    xmlns:tns="http://api.service.apibatchmember.emailvision.com/" 
    xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" 
    xmlns:xsd="http://www.w3.org/2001/XMLSchema" 
    name="BatchMemberServiceService" 
    targetNamespace="http://api.service.apibatchmember.emailvision.com/">

    <types>
        <schema xmlns="http://exceptions.service.apibatchmember.emailvision.com/" xmlns:ns1="http://api.service.apibatchmember.emailvision.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://exceptions.service.apibatchmember.emailvision.com/">
            <import namespace="http://api.service.apibatchmember.emailvision.com/"/>
            <element name="batchMemberExceptionDetails" type="ns1:batchMemberExceptionDetails"/>
            <element name="BatchMemberServiceException" nillable="true" type="ns1:batchMemberExceptionDetails"/>
        </schema>
        <schema xmlns:tns="http://api.service.apibatchmember.emailvision.com/" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="unqualified" targetNamespace="http://api.service.apibatchmember.emailvision.com/" version="1.0">
            <element name="closeApiConnection" type="tns:closeApiConnection"/>
            <element name="closeApiConnectionResponse" type="tns:closeApiConnectionResponse"/>
            <element name="column" type="tns:column"/>
            <element name="dedup" type="tns:dedup"/>
            <element name="exceptionDetails" type="tns:connectionExceptionDetails"/>
            <element name="getBadFile" type="tns:getBadFile"/>
            <element name="getBadFileResponse" type="tns:getBadFileResponse"/>
            <element name="getLastUpload" type="tns:getLastUpload"/>
            <element name="getLastUploadResponse" type="tns:getLastUploadResponse"/>
            <element name="getLogFile" type="tns:getLogFile"/>
            <element name="getLogFileResponse" type="tns:getLogFileResponse"/>
            <element name="getUploadStatus" type="tns:getUploadStatus"/>
            <element name="getUploadStatusResponse" type="tns:getUploadStatusResponse"/>
            <element name="getUploadSummaryList" type="tns:getUploadSummaryList"/>
            <element name="getUploadSummaryListResponse" type="tns:getUploadSummaryListResponse"/>
            <element name="insertUpload" type="tns:insertUpload"/>
            <element name="list" type="tns:List"/>
            <element name="listOptions" type="tns:UploadListOptions"/>
            <element name="mapping" type="tns:mapping"/>
            <element name="mergeUpload" type="tns:mergeUpload"/>
            <element name="openApiConnection" type="tns:openApiConnection"/>
            <element name="openApiConnectionResponse" type="tns:openApiConnectionResponse"/>
            <element name="openPartnerConnection" type="tns:openPartnerConnection"/>
            <element name="openPartnerConnectionResponse" type="tns:openPartnerConnectionResponse"/>
            <element name="partnerConnectionResult" type="tns:apiPartnerConnectionResult"/>
            <element name="search" type="tns:UploadSearchCriteria"/>
            <element name="sortOption" type="tns:UploadSortOption"/>
            <element name="uploadFileInsert" type="tns:uploadFileInsert"/>
            <element name="uploadFileInsertResponse" type="tns:uploadFileInsertResponse"/>
            <element name="uploadFileMerge" type="tns:uploadFileMerge"/>
            <element name="uploadFileMergeResponse" type="tns:uploadFileMergeResponse"/>
            <element name="uploadInfo" type="tns:uploadInfo"/>
            <element name="uploadStatus" type="tns:uploadStatus"/>
            <element name="uploadSummaryEntity" type="tns:UploadSummaryEntity"/>
            <complexType name="uploadFileInsert">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="insertUpload" type="tns:insertUpload"/>
                    <element xmlns:ns1="http://www.w3.org/2005/05/xmlmime" name="file" ns1:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
                </sequence>
            </complexType>
            <complexType name="insertUpload">
                <complexContent>
                    <extension base="tns:upload">
                        <sequence>
                            <element name="autoMapping" type="xs:boolean"/>
                            <element minOccurs="0" name="dedup" type="tns:dedup"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>
            <complexType abstract="true" name="upload">
                <sequence>
                    <element minOccurs="0" name="dateFormat" type="xs:string"/>
                    <element minOccurs="0" name="fileEncoding" type="xs:string"/>
                    <element minOccurs="0" name="fileName" type="xs:string"/>
                    <element minOccurs="0" name="mapping" type="tns:mapping"/>
                    <element minOccurs="0" name="separator" type="xs:string"/>
                    <element name="skipFirstLine" type="xs:boolean"/>
                </sequence>
            </complexType>
            <complexType name="dedup">
                <sequence>
                    <element minOccurs="0" name="criteria" type="xs:string"/>
                    <element minOccurs="0" name="order" type="xs:string"/>
                    <element name="skipUnsubAndHBQ" type="xs:boolean"/>
                </sequence>
            </complexType>
            <complexType name="mapping">
                <sequence>
                    <element maxOccurs="unbounded" minOccurs="0" name="column" nillable="true" type="tns:column"/>
                </sequence>
            </complexType>
            <complexType name="column">
                <sequence>
                    <element name="colNum" type="xs:int"/>
                    <element minOccurs="0" name="dateFormat" type="xs:string"/>
                    <element minOccurs="0" name="defaultValue" type="xs:string"/>
                    <element minOccurs="0" name="fieldName" type="xs:string"/>
                    <element name="toReplace" type="xs:boolean"/>
                </sequence>
            </complexType>
            <complexType name="uploadFileInsertResponse">
                <sequence>
                    <element name="return" type="xs:long"/>
                </sequence>
            </complexType>
            <complexType name="connectionExceptionDetails">
                <sequence>
                    <element minOccurs="0" name="description" type="xs:string"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="xs:string"/>
                    <element minOccurs="0" name="status" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="batchMemberExceptionDetails">
                <sequence>
                    <element minOccurs="0" name="description" type="xs:string"/>
                    <element maxOccurs="unbounded" minOccurs="0" name="fields" nillable="true" type="xs:string"/>
                    <element minOccurs="0" name="status" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="getBadFile">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="uploadId" type="xs:long"/>
                </sequence>
            </complexType>
            <complexType name="getBadFileResponse">
                <sequence>
                    <element name="return" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="uploadFileMerge">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="mergeUpload" type="tns:mergeUpload"/>
                    <element xmlns:ns2="http://www.w3.org/2005/05/xmlmime" name="file" ns2:expectedContentTypes="application/octet-stream" type="xs:base64Binary"/>
                </sequence>
            </complexType>
            <complexType name="mergeUpload">
                <complexContent>
                    <extension base="tns:upload">
                        <sequence>
                            <element minOccurs="0" name="criteria" type="xs:string"/>
                        </sequence>
                    </extension>
                </complexContent>
            </complexType>
            <complexType name="uploadFileMergeResponse">
                <sequence>
                    <element name="return" type="xs:long"/>
                </sequence>
            </complexType>
            <complexType name="getLogFile">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="uploadId" type="xs:long"/>
                </sequence>
            </complexType>
            <complexType name="getLogFileResponse">
                <sequence>
                    <element name="return" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="openApiConnection">
                <sequence>
                    <element name="login" type="xs:string"/>
                    <element name="pwd" type="xs:string"/>
                    <element name="key" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="openApiConnectionResponse">
                <sequence>
                    <element name="return" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="getUploadSummaryList">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="listOptions" type="tns:UploadListOptions"/>
                </sequence>
            </complexType>
            <complexType name="UploadListOptions">
                <sequence>
                    <element name="page" type="xs:int"/>
                    <element minOccurs="0" name="pageSize" type="xs:int"/>
                    <element minOccurs="0" name="search" type="tns:UploadSearchCriteria"/>
                    <element minOccurs="0" name="sortOptions">
                        <complexType>
                            <sequence>
                                <element maxOccurs="unbounded" minOccurs="0" name="sortOption" type="tns:UploadSortOption"/>
                            </sequence>
                        </complexType>
                    </element>
                </sequence>
            </complexType>
            <complexType name="UploadSearchCriteria">
                <sequence>
                    <element minOccurs="0" name="uploadId" type="xs:long"/>
                    <element minOccurs="0" name="source" type="tns:uploadSource"/>
                    <element minOccurs="0" name="type" type="tns:uploadType"/>
                    <element minOccurs="0" name="status" type="tns:uploadJobStatus"/>
                    <element minOccurs="0" name="minImportDate" type="xs:dateTime"/>
                    <element minOccurs="0" name="maxImportDate" type="xs:dateTime"/>
                </sequence>
            </complexType>
            <complexType name="UploadSortOption">
                <sequence>
                    <element minOccurs="0" name="column" type="tns:uploadCriteriaColumn"/>
                    <element minOccurs="0" name="order" type="tns:sortOrder"/>
                </sequence>
            </complexType>
            <complexType name="getUploadSummaryListResponse">
                <sequence>
                    <element name="return" type="tns:List"/>
                </sequence>
            </complexType>
            <complexType name="List">
                <sequence>
                    <element minOccurs="0" name="uploadSummaries">
                        <complexType>
                            <sequence>
                                <element maxOccurs="unbounded" minOccurs="0" name="uploadSummaryEntity" type="tns:UploadSummaryEntity"/>
                            </sequence>
                        </complexType>
                    </element>
                    <element name="page" type="xs:int"/>
                    <element name="pageSize" type="xs:int"/>
                    <element name="nbTotalItems" type="xs:long"/>
                    <element name="nextPage" type="xs:boolean"/>
                    <element name="previousPage" type="xs:boolean"/>
                </sequence>
            </complexType>
            <complexType name="UploadSummaryEntity">
                <sequence>
                    <element name="uploadId" type="xs:long"/>
                    <element minOccurs="0" name="manager" type="xs:string"/>
                    <element minOccurs="0" name="source" type="tns:uploadSource"/>
                    <element minOccurs="0" name="type" type="tns:uploadType"/>
                    <element minOccurs="0" name="date" type="xs:dateTime"/>
                    <element minOccurs="0" name="name" type="xs:string"/>
                    <element name="size" type="xs:long"/>
                    <element minOccurs="0" name="status" type="tns:uploadJobStatus"/>
                </sequence>
            </complexType>
            <complexType name="closeApiConnection">
                <sequence>
                    <element name="token" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="closeApiConnectionResponse">
                <sequence>
                    <element name="return" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="getLastUpload">
                <sequence>
                    <element name="token" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="getLastUploadResponse">
                <sequence>
                    <element maxOccurs="unbounded" name="return" type="tns:uploadInfo"/>
                </sequence>
            </complexType>
            <complexType name="uploadInfo">
                <sequence>
                    <element name="id" type="xs:long"/>
                    <element minOccurs="0" name="source" type="xs:string"/>
                    <element minOccurs="0" name="status" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="openPartnerConnection">
                <sequence>
                    <element name="login" type="xs:string"/>
                    <element name="pwd" type="xs:string"/>
                    <element name="partnerkey" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="openPartnerConnectionResponse">
                <sequence>
                    <element name="return" type="tns:apiPartnerConnectionResult"/>
                </sequence>
            </complexType>
            <complexType name="apiPartnerConnectionResult">
                <sequence>
                    <element minOccurs="0" name="manager_type" type="xs:string"/>
                    <element minOccurs="0" name="platform" type="xs:string"/>
                    <element minOccurs="0" name="token" type="xs:string"/>
                </sequence>
            </complexType>
            <complexType name="getUploadStatus">
                <sequence>
                    <element name="token" type="xs:string"/>
                    <element name="uploadId" type="xs:long"/>
                </sequence>
            </complexType>
            <complexType name="getUploadStatusResponse">
                <sequence>
                    <element name="return" type="tns:uploadStatus"/>
                </sequence>
            </complexType>
            <complexType name="uploadStatus">
                <sequence>
                    <element minOccurs="0" name="details" type="xs:string"/>
                    <element minOccurs="0" name="status" type="xs:string"/>
                </sequence>
            </complexType>
            <simpleType name="uploadSource">
                <restriction base="xs:string">
                    <enumeration value="ccmd"/>
                    <enumeration value="api"/>
                </restriction>
            </simpleType>
            <simpleType name="uploadType">
                <restriction base="xs:string">
                    <enumeration value="insert"/>
                    <enumeration value="merge"/>
                </restriction>
            </simpleType>
            <simpleType name="uploadJobStatus">
                <restriction base="xs:string">
                    <enumeration value="created"/>
                    <enumeration value="validated"/>
                    <enumeration value="processing"/>
                    <enumeration value="complete"/>
                    <enumeration value="error"/>
                </restriction>
            </simpleType>
            <simpleType name="uploadCriteriaColumn">
                <restriction base="xs:string">
                    <enumeration value="uploadId"/>
                    <enumeration value="source"/>
                    <enumeration value="type"/>
                    <enumeration value="date"/>
                    <enumeration value="name"/>
                    <enumeration value="status"/>
                </restriction>
            </simpleType>
            <simpleType name="sortOrder">
                <restriction base="xs:string">
                    <enumeration value="ASC"/>
                    <enumeration value="DESC"/>
                </restriction>
            </simpleType>
        </schema>
        <xsd:schema xmlns:ns0="http://api.service.apibatchmember.emailvision.com/" xmlns:tns="http://connection.exception.api.commons.emailvision.com/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://connection.exception.api.commons.emailvision.com/">
            <xsd:element name="ConnectionServiceException" nillable="true" type="ns0:connectionExceptionDetails"/>
        </xsd:schema>
    </types>
    <message name="getBadFileResponse">
        <part element="tns:getBadFileResponse" name="parameters"></part>
    </message>
    <message name="closeApiConnection">
        <part element="tns:closeApiConnection" name="parameters"></part>
    </message>
    <message name="getLogFile">
        <part element="tns:getLogFile" name="parameters"></part>
    </message>
    <message name="getLastUploadResponse">
        <part element="tns:getLastUploadResponse" name="parameters"></part>
    </message>
    <message name="getBadFile">
        <part element="tns:getBadFile" name="parameters"></part>
    </message>
    <message name="uploadFileMerge">
        <part element="tns:uploadFileMerge" name="parameters"></part>
    </message>
    <message name="getUploadSummaryListResponse">
        <part element="tns:getUploadSummaryListResponse" name="parameters"></part>
    </message>
    <message name="getUploadStatus">
        <part element="tns:getUploadStatus" name="parameters"></part>
    </message>
    <message name="openPartnerConnectionResponse">
        <part element="tns:openPartnerConnectionResponse" name="parameters"></part>
    </message>
    <message name="ConnectionServiceException">
        <part element="ns1:ConnectionServiceException" name="ConnectionServiceException"></part>
    </message>
    <message name="closeApiConnectionResponse">
        <part element="tns:closeApiConnectionResponse" name="parameters"></part>
    </message>
    <message name="openApiConnectionResponse">
        <part element="tns:openApiConnectionResponse" name="parameters"></part>
    </message>
    <message name="openPartnerConnection">
        <part element="tns:openPartnerConnection" name="parameters"></part>
    </message>
    <message name="getUploadSummaryList">
        <part element="tns:getUploadSummaryList" name="parameters"></part>
    </message>
    <message name="getLogFileResponse">
        <part element="tns:getLogFileResponse" name="parameters"></part>
    </message>
    <message name="getUploadStatusResponse">
        <part element="tns:getUploadStatusResponse" name="parameters"></part>
    </message>
    <message name="uploadFileInsert">
        <part element="tns:uploadFileInsert" name="parameters"></part>
    </message>
    <message name="uploadFileMergeResponse">
        <part element="tns:uploadFileMergeResponse" name="parameters"></part>
    </message>
    <message name="uploadFileInsertResponse">
        <part element="tns:uploadFileInsertResponse" name="parameters"></part>
    </message>
    <message name="getLastUpload">
        <part element="tns:getLastUpload" name="parameters"></part>
    </message>
    <message name="BatchMemberServiceException">
        <part element="ns2:BatchMemberServiceException" name="BatchMemberServiceException"></part>
    </message>
    <message name="openApiConnection">
        <part element="tns:openApiConnection" name="parameters"></part>
    </message>
    <portType name="BatchMemberService">
        <operation name="uploadFileInsert">
            <input message="tns:uploadFileInsert" name="uploadFileInsert"></input>
            <output message="tns:uploadFileInsertResponse" name="uploadFileInsertResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="getBadFile">
            <input message="tns:getBadFile" name="getBadFile"></input>
            <output message="tns:getBadFileResponse" name="getBadFileResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="uploadFileMerge">
            <input message="tns:uploadFileMerge" name="uploadFileMerge"></input>
            <output message="tns:uploadFileMergeResponse" name="uploadFileMergeResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="getLogFile">
            <input message="tns:getLogFile" name="getLogFile"></input>
            <output message="tns:getLogFileResponse" name="getLogFileResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="openApiConnection">
            <input message="tns:openApiConnection" name="openApiConnection"></input>
            <output message="tns:openApiConnectionResponse" name="openApiConnectionResponse"></output>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="getUploadSummaryList">
            <input message="tns:getUploadSummaryList" name="getUploadSummaryList"></input>
            <output message="tns:getUploadSummaryListResponse" name="getUploadSummaryListResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="closeApiConnection">
            <input message="tns:closeApiConnection" name="closeApiConnection"></input>
            <output message="tns:closeApiConnectionResponse" name="closeApiConnectionResponse"></output>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="getLastUpload">
            <input message="tns:getLastUpload" name="getLastUpload"></input>
            <output message="tns:getLastUploadResponse" name="getLastUploadResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="openPartnerConnection">
            <input message="tns:openPartnerConnection" name="openPartnerConnection"></input>
            <output message="tns:openPartnerConnectionResponse" name="openPartnerConnectionResponse"></output>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
        <operation name="getUploadStatus">
            <input message="tns:getUploadStatus" name="getUploadStatus"></input>
            <output message="tns:getUploadStatusResponse" name="getUploadStatusResponse"></output>
            <fault message="tns:BatchMemberServiceException" name="BatchMemberServiceException"></fault>
            <fault message="tns:ConnectionServiceException" name="ConnectionServiceException"></fault>
        </operation>
    </portType>
    <binding name="BatchMemberServiceServiceSoapBinding" type="tns:BatchMemberService">
        <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
        <operation name="uploadFileInsert">
            <soap:operation soapAction="" style="document"/>
            <input name="uploadFileInsert">
                <soap:body use="literal"/>
            </input>
            <output name="uploadFileInsertResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="getBadFile">
            <soap:operation soapAction="" style="document"/>
            <input name="getBadFile">
                <soap:body use="literal"/>
            </input>
            <output name="getBadFileResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="uploadFileMerge">
            <soap:operation soapAction="" style="document"/>
            <input name="uploadFileMerge">
                <soap:body use="literal"/>
            </input>
            <output name="uploadFileMergeResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="getLogFile">
            <soap:operation soapAction="" style="document"/>
            <input name="getLogFile">
                <soap:body use="literal"/>
            </input>
            <output name="getLogFileResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="openApiConnection">
            <soap:operation soapAction="" style="document"/>
            <input name="openApiConnection">
                <soap:body use="literal"/>
            </input>
            <output name="openApiConnectionResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="getUploadSummaryList">
            <soap:operation soapAction="" style="document"/>
            <input name="getUploadSummaryList">
                <soap:body use="literal"/>
            </input>
            <output name="getUploadSummaryListResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="closeApiConnection">
            <soap:operation soapAction="" style="document"/>
            <input name="closeApiConnection">
                <soap:body use="literal"/>
            </input>
            <output name="closeApiConnectionResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="getLastUpload">
            <soap:operation soapAction="" style="document"/>
            <input name="getLastUpload">
                <soap:body use="literal"/>
            </input>
            <output name="getLastUploadResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="openPartnerConnection">
            <soap:operation soapAction="" style="document"/>
            <input name="openPartnerConnection">
                <soap:body use="literal"/>
            </input>
            <output name="openPartnerConnectionResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
        <operation name="getUploadStatus">
            <soap:operation soapAction="" style="document"/>
            <input name="getUploadStatus">
                <soap:body use="literal"/>
            </input>
            <output name="getUploadStatusResponse">
                <soap:body use="literal"/>
            </output>
            <fault name="BatchMemberServiceException">
                <soap:fault name="BatchMemberServiceException" use="literal"/>
            </fault>
            <fault name="ConnectionServiceException">
                <soap:fault name="ConnectionServiceException" use="literal"/>
            </fault>
        </operation>
    </binding>
    <service name="BatchMemberServiceService">
        <port binding="tns:BatchMemberServiceServiceSoapBinding" name="BatchMemberServicePort">
            <soap:address location="http://emvapi.emv3.com/apibatchmember/services/BatchMemberService"/>
        </port>
    </service>
</definitions>